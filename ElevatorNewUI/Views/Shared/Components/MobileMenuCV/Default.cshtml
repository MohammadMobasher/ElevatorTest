@using Service.Repos
@using DataLayer.Entities
@using Service.Repos.Product
@using DataLayer.ViewModels.Products
@using DataLayer.DTO
@model List<ProductGroupDTO>

@inject SiteSettingRepository _siteSettingRepository
@{
    SiteSetting siteSetting = await _siteSettingRepository.GetInfo();



    string createParentMenu()
    {
        string output = "";

        foreach (ProductGroupDTO item in Model.Where(x => x.ParentId == null))
        {
            output += "<li>";

            if (Model.Where(x => x.ParentId == item.Id).Count() > 0)
            {
                output += "<a href='/Product/ProductGroup/" + item.Id + "' class='collapsed' type='button' data-toggle='collapse' data-target='#collapse" + item.Id + "' aria-expanded='false' aria-controls='collapse" + item.Id + "'><i class='mdi mdi-chevron-down'></i>" + item.Title + "</a>";
                output += "<div id='collapse" + item.Id + "' class='collapse' aria-labelledby='heading" + item.Id + "' data-parent='#accordionExample' style=''><ul>";
                output += createMenu(item.Id);
                output += "</ul></div>";
            }
            else
            {
                output += "<a href='/Product/ProductGroup/" + item.Id + "'>" + item.Title + "</a>";
            }

            output += "</li>";

        }

        return output;
    }



    string createMenu(int parentId, int level = 2)
    {
        string outPut = "";

        List<ProductGroupDTO> items = Model.Where(x => x.ParentId != null && x.ParentId == parentId).ToList();

        foreach (var item in items)
        {
            if (Model.Where(x => x.ParentId == item.Id).Count() > 0)
            {
                outPut += "<li class='has-sub'>";
                outPut += "<a href='/Product/ProductGroup/" + item.Id + "' class='category-level-" + level + "'>" + item.Id + "</a>";
                outPut += "<ul>";

                outPut += createMenu(item.Id, level + 1);

                outPut += "</ul>";
                outPut += "</li>";
            }
            else
            {
                outPut += "<li>";

                outPut += "<a href='/Product/ProductGroup/" + item.Id + "' class='category-level-" + level + "'>" + item.Title + "</a>";

                outPut += "</li>";
            }
        }

        return outPut;
    }

}
<nav class="sidebar">
    <div class="nav-header">
        <!--              <img class="pic-header" src="images/header-pic.jpg" alt="">-->
        <div class="header-cover"></div>
        <div class="logo-wrap">
            <a class="logo-icon" href="#"><img alt="logo-icon" src="@( string.IsNullOrEmpty(siteSetting.Logo) ? "/Uploads/SiteSetting/Logo.png" : Url.Content("/" + siteSetting.Logo))" width="40"></a>
        </div>
    </div>
    <ul class="nav-categories ul-base">
        <li><a href="/">صفحه اصلی</a></li>
        @Html.Raw(createParentMenu())
        <li><a href="/Blog/Index">خبرنامه</a></li>
        <li><a href="/Tree/Index"><i class="fa fa-tree colorgreen" aria-hidden="true"></i> درخت کاری</a></li>
        <li><a href="/Account/Login">حساب من</a></li>
    </ul>
</nav>