@using Microsoft.AspNetCore.Html

@{
    int count = 3;

    int CurrentPage = ViewBag.CurrentPage == 0 ? 1 : ViewBag.CurrentPage;
    int PageCount = ViewBag.pageCount;
    int PageSize = ViewBag.PageSize;

    var querystringDict = Context.Request.Query.Keys.Where(x => x != "newSearch").ToDictionary(k => k, v => Context.Request.Query[v]);

    var queryString = "";
}


@if (PageCount != 0)
{

    <nav aria-label="Page navigation example">
        <ul class="pagination">


            @if (CurrentPage != 1)
            {



                @* Start First *@
                {

                    querystringDict["currentPage"] = "1";
                    queryString = string.Join("&", querystringDict.Select((x) => x.Key + "=" + x.Value));

                }
                <li class="page-item" data-FFW="1">
                    <a class="page-link" data-page="1" href="?@queryString">
                        <span aria-hidden="true">&laquo;&laquo;</span>
                    </a>
                </li>
                @* End First *@

                @* Start Previous *@

                {

                    querystringDict["currentPage"] = (CurrentPage - 1) + "";
                    queryString = string.Join("&", querystringDict.Select((x) => x.Key + "=" + x.Value));

                }

                <li class="page-item" data-FFW="1">
                    <a class="page-link" data-page="1" href="?@queryString">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                @* End Previous *@
            }


            @for (var i = CurrentPage - count; i <= CurrentPage - 1; i++)
            {
                if (i >= 1)
                {
                    {

                        querystringDict["currentPage"] = i + "";
                        queryString = string.Join("&", querystringDict.Select((x) => x.Key + "=" + x.Value));

                    }
                    <li class="page-item">
                        <a class="page-link" data-page="@i" href="?@queryString">
                            <span aria-hidden="true">@i</span>
                        </a>
                    </li>
                }
            }



            @* Start Current *@
            @{

                querystringDict["currentPage"] = CurrentPage + "";
                queryString = string.Join("&", querystringDict.Select((x) => x.Key + "=" + x.Value));

            }

            <li class="page-item active"><a class="page-link" href="?@queryString">@CurrentPage</a></li>
            @* End Current *@



            @for (var i = CurrentPage + 1; i <= CurrentPage + count; i++)
            {
                if (i <= PageCount)
                {
                    {

                        querystringDict["currentPage"] = i + "";
                        queryString = string.Join("&", querystringDict.Select((x) => x.Key + "=" + x.Value));

                    }

                    <li class="page-item">
                        <a class="page-link" data-page="@i" href="?@queryString">
                            <span aria-hidden="true">@i</span>
                        </a>
                    </li>
                }
            }



            @if (CurrentPage != PageCount && PageCount > 1)
            {
                @* Start Next *@
                {

                    querystringDict["currentPage"] = (CurrentPage + 1) + "";
                    queryString = string.Join("&", querystringDict.Select((x) => x.Key + "=" + x.Value));

                }
                <li class="page-item" data-FFW="1">
                    <a class="page-link" data-page="@queryString.Replace("currentPage=","")" href="?@queryString">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
                @* End Next *@


                @* Start Last *@
                {

                    querystringDict["currentPage"] = PageCount + "";
                    queryString = string.Join("&", querystringDict.Select((x) => x.Key + "=" + x.Value));

                }
                <li class="page-item" data-FFW="1">
                    <a class="page-link" data-page="@queryString.Replace("currentPage=","")" href="?@queryString">
                        <span aria-hidden="true">&raquo;&raquo;</span>
                    </a>
                </li>
                @* End Last *@

            }

        </ul>
    </nav>



}


<script>

    $(function () {

        var pageSizeValue = @PageSize;
        console.log("pageSizeValue => ", pageSizeValue);
        $("[name='pageSize']").val(pageSizeValue);

        $("[name='pageSize']").on("change", function () {
            var params = window.location.search;
            if (params === "") {
                window.location.search = "?pageSize=" + $(this).val();
            }
            else {
                window.location.search = "&pageSize=" + $(this).val();
            }
            console.log(window.location);

            //reload();
        });

    });

</script>